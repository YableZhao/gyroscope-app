apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: multimodal-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: false
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: false
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "200m"
        securityContext:
          runAsUser: 472
          runAsGroup: 472
          fsGroup: 472
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: multimodal-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  selector:
    app.kubernetes.io/name: grafana
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: multimodal-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
type: Opaque
data:
  # admin-password: "admin" (base64 encoded)
  admin-password: YWRtaW4=

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: multimodal-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service:9090
      isDefault: true
      editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: multimodal-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /etc/grafana/provisioning/dashboards
        
  multimodal-platform-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Multimodal Platform Overview",
        "tags": ["multimodal", "platform"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Total Requests",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total[5m]))",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"hideFrom": {"tooltip": false, "vis": false, "legend": false}},
                "mappings": [],
                "thresholds": {"steps": [{"color": "green", "value": null}]}
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "unit": "s"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Active Games",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(active_game_sessions)",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "timepicker": {},
        "templating": {"list": []},
        "annotations": {"list": []},
        "refresh": "5s",
        "schemaVersion": 27,
        "version": 0,
        "links": []
      }
    }